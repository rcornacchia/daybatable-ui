$button-root: "aws-btn";

$button-default-height: 44px;
$button-default-font-size: 14px;
$button-default-line-height: 20px;
$button-default-border-radius: 2px;

$button-font-family: inherit;
$button-font-color: #FFFFFF;
$button-font-weight: 600;
$button-letter-spacing: 0px;
$button-horizontal-padding: 16px;

$button-raise-level: 2px;
$button-hover-pressure: 1;

$button-color-primary: #325c99;
$button-color-secondary: #e53935;
$button-color-disabled: #9E9E9E;

$loading-transition-speed: 6s;
$transform-speed: 0.150s;

/**
 button-color: color-name, background, color
*/
$button-colors:
  ("primary", $button-color-primary, lighten($button-color-primary, 55%)),
  ("secondary", $button-color-secondary, lighten($button-color-secondary, 55%)),
  ("disabled", $button-color-disabled, lighten($button-color-disabled, 30%)),
  ("facebook", #3b5998, #FFFFFF),
  ("twitter", #00aced, #FFFFFF),
  ("linkedin", #0077b5, #FFFFFF),
  ("whatsapp", #25d366, #FFFFFF),
  ("unvoted", #e9e9e9, #000000),
  ("for", #00A8E8, #FFFFFF),
  ("against", #F22B4A, #FFFFFF),
  ("github", #4e545a, #FFFFFF);

/**
 button-size: size-name, width, height, font-size, line-height
*/
$button-sizes:
  ("icon", 80px, 25px, $button-default-font-size, $button-default-line-height)
  ("small", 88px, $button-default-height, $button-default-font-size, $button-default-line-height)
  ("medium", 132px, $button-default-height, $button-default-font-size, $button-default-line-height)
  ("large", 196px, $button-default-height, $button-default-font-size, $button-default-line-height);

@mixin color-pattern($background, $color) {
  .#{$button-root}__wrapper {
    &:before {
      background-color: darken($background, 17%);
    }
  }
  .#{$button-root}__content {
    background-color: $background;
    color: $color;
  }
}

@mixin getColors($colors) {
  @each $color in $colors {
    &--#{nth($color, 1)} {
        @include color-pattern(nth($color, 2), nth($color, 3));
    }
  }
}

@mixin getSizes($sizes) {
  @each $size in $sizes {
    &--#{nth($size, 1)} {
      height: nth($size, 3);
      font-size: nth($size, 4);
      line-height: nth($size, 5);
    }
  }
}

@mixin button-hover-skew($direction) {
  &:before {
    transform: skewY(1deg * $button-hover-pressure * $direction) translateY(-1px * $button-hover-pressure/2);
  }
  .#{$button-root}__content {
    transform: skewY(1deg * $button-hover-pressure * -$direction);
  }
}

@mixin button-hover-middle($pressure) {
  &:before {
    transform: translateY(-1px * $pressure);
  }
  .#{$button-root}__content {
    transform: translateY(1px * $pressure);
  }
}

%fill-parent {
  display: block;
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
}

%clear-spacing {
  padding: 0;
  margin: 0;
}

%clear-focus {
  outline-color: 0;
  outline-style: none;
  outline-width: 0;
}

*::selection {
  background:transparent;
}

*::-moz-selection {
  background:transparent;
}

*::-webkit-selection {
  background:transparent;
}

%clear-selection {
  user-select: none;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  -webkit-tap-highlight-color: transparent;
}

.#{$button-root} {
  @extend %clear-spacing;
  @extend %clear-focus;
  @extend %clear-selection;
  box-sizing: border-box;
  display: inline-block;
  height: $button-default-height;
  position: relative;
  background-color: transparent;
  cursor: pointer;
  font-style: normal;
  font-size: $button-default-font-size;
  line-height: $button-default-line-height;
  font-weight: $button-font-weight;
  font-family: $button-font-family;
  letter-spacing: $button-letter-spacing;
  text-decoration: none;
  text-align: center;
  transition: opacity .1s ease-out;
  border: none;
  opacity: 0;
  z-index: 5;
  .#{$button-root}__container {
    display: block;
    height: 100%;
  }
  .#{$button-root}__wrapper {
    position: relative;
		font-family: $button-font-family;
		display: flex;
    align-items: stretch;
		width: 100%;
		height: calc(100% - #{$button-raise-level});
    margin-top: -$button-raise-level;
    &:before{
      @extend %fill-parent;
      content: " ";
  		border-radius: $button-default-border-radius;
  		top: auto;
  		bottom: -$button-raise-level;
  		z-index: 1;
  		transition: transform $transform-speed ease-out, background $transform-speed ease-out;
    }
    &:after{
      @extend %fill-parent;
      content: " ";
  		background-color: rgba(0, 0, 0, 0.15);
  		border-radius: $button-default-border-radius;
      z-index: 3;
  		width: 0;
      top: $button-raise-level;
    }
  }
  .#{$button-root}__content {
    position: relative;
    display: flex;
    flex: 1;
    align-items: center;
    justify-content: center;
		border-radius: $button-default-border-radius;
		text-indent: 0;
		z-index: 3;
		overflow: hidden;
    padding: 0 $button-horizontal-padding;
		transition: transform $transform-speed ease-out, background $transform-speed ease-out, color $transform-speed ease-out;
    &:before{
      @extend %fill-parent;
    }
    &:after{
      @extend %fill-parent;
    }
    > span {
      display: block;
    }
  }
  &:focus {
    @extend %clear-focus;
  }
  &:hover {
    &:before {
      opacity: 1;
    }
  }
  &:before {
    content: " ";
		background-color: rgba(0, 0, 0, 0.3);
		width: calc(100% - 4px);
		height: calc(100% - #{$button-raise-level*2});
		bottom: -($button-raise-level/2);
		left: 2px;
		position: absolute;
		border-radius: $button-default-border-radius;
		z-index: 1;
		transition: transform $transform-speed * 0.8 ease-out, background $transform-speed * 0.8 ease-out;
  }
  @include getColors($button-colors);
  &--visible {
    opacity: 1;
  }
  &--left {
    @include button-hover-skew(1);
  }
  &--right {
    @include button-hover-skew(-1);
  }
  &--middle {
    @include button-hover-middle($button-hover-pressure);
  }
  &--progress {
    .#{$button-root}__content {
      > span {
        transition: opacity $transform-speed * 0.50 ease-out $transform-speed * 0.75;
      }
      &:before, &:after {
        display: flex;
        align-items: center;
        justify-content: center;
        color: rgba(255,255,255, 0.65);
    		opacity: 0;
        transition: transform $transform-speed ease-out, opacity $transform-speed * 0.75 ease-out;
      }
      &:before {
        content: attr(data-loading);
    		transform: translateY(50%);
      }
      &:after {
        content: attr(data-status);
    		transform: translateY(-50%);
      }
    }
    &.#{$button-root}--active {
      .#{$button-root}__content {
        > span {
          opacity: 0.075;
        }
      }
    }
  }
  &--active {
    &:before {
  		transform: translateY(-$button-raise-level);
    }
    .#{$button-root}__content {
  		transition: transform $transform-speed * 0.8 ease-out, background $transform-speed * 0.8 ease-out, color $transform-speed * 0.8 ease-out;
  		transform: translateY($button-raise-level);
    }
  }
  &--start {
    .#{$button-root}__content {
      &:before {
        opacity: 1;
        transform: translateY(0);
      }
    }
    .#{$button-root}__wrapper {
      &:after {
    		transition: width $loading-transition-speed ease-out;
    		width: 90%;
      }
    }
  }
  &--end {
    .#{$button-root}__wrapper {
      &:after {
    		transition: width $loading-transition-speed/20 ease-out;
    		width: 100%;
      }
    }
    .#{$button-root}__content {
      &:after {
        opacity: 1;
    		transform: translateY(0);
      }
      &:before {
    		transform: translateY(50%);
        opacity: 0;
      }
    }
  }
  &--off {
    &:before {
  		transform: translateY(-$button-raise-level);
  		background-color: rgba(0, 0, 0, 0.05);
    }
    &:hover {
      .#{$button-root}__wrapper {
        &:before {
          background-color: #2d2d2d;
        }
      }
      .#{$button-root}__content {
        background-color: #313131;
    		color: #3b3b3b;
      }
    }
    .#{$button-root}__wrapper {
      &:before {
        background-color: #323232;
      }
    }
    .#{$button-root}__content {
      background-color: #353535;
  		color: #424242;
  		transform: translateY($button-raise-level);
    }
  }
  @include getSizes($button-sizes);
  &--fill {
    width: 100%;
  }
}

.#{$button-root}__bubble {
  display: block;
  position: absolute;
  visibility: hidden;
  top: 0;
  left: 0;
  width: 0px;
  height: 0px;
  border-radius: 50%;
  background-color: rgba(0,0,0,0.2);
  z-index: -1;
  opacity: 0;
  transform: scale(0.1);
  animation: ping $transform-speed * 3.5 cubic-bezier(0.5, 0, 0.6, 0.4) 0.05s forwards;
  .#{$button-root}--icon & {
    display: none;
  }
}

@keyframes ping {
  1% {
    visibility: visible;
  }
  10% {
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  99% {
    transform: scale(1);
    opacity: 0;
  }
  100% {
    visibility: hidden;
  }
}
